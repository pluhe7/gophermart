// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/pluhe7/gophermart/internal/storage (interfaces: TransactionStorage)

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	model "github.com/pluhe7/gophermart/internal/model"
)

// MockTransactionStorage is a mock of TransactionStorage interface.
type MockTransactionStorage struct {
	ctrl     *gomock.Controller
	recorder *MockTransactionStorageMockRecorder
}

// MockTransactionStorageMockRecorder is the mock recorder for MockTransactionStorage.
type MockTransactionStorageMockRecorder struct {
	mock *MockTransactionStorage
}

// NewMockTransactionStorage creates a new mock instance.
func NewMockTransactionStorage(ctrl *gomock.Controller) *MockTransactionStorage {
	mock := &MockTransactionStorage{ctrl: ctrl}
	mock.recorder = &MockTransactionStorageMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockTransactionStorage) EXPECT() *MockTransactionStorageMockRecorder {
	return m.recorder
}

// Create mocks base method.
func (m *MockTransactionStorage) Create(arg0 *model.Transaction) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Create", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// Create indicates an expected call of Create.
func (mr *MockTransactionStorageMockRecorder) Create(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Create", reflect.TypeOf((*MockTransactionStorage)(nil).Create), arg0)
}

// FindWithdrawsForUser mocks base method.
func (m *MockTransactionStorage) FindWithdrawsForUser(arg0 int) ([]*model.Transaction, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "FindWithdrawsForUser", arg0)
	ret0, _ := ret[0].([]*model.Transaction)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// FindWithdrawsForUser indicates an expected call of FindWithdrawsForUser.
func (mr *MockTransactionStorageMockRecorder) FindWithdrawsForUser(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "FindWithdrawsForUser", reflect.TypeOf((*MockTransactionStorage)(nil).FindWithdrawsForUser), arg0)
}
